
<div style="text-align: center;">
    <button data-bind="click: toggleSongRequestDialogVisible" src="@Url.Content("~/content/images/request.png")" title="Got a song request?">Song Request</button>
    <button class="song-control" data-bind="click: playPause, attr: { src: playImage }">Play/Pause</button>
    <button class="song-control" data-bind="click: nextSong" src="@Url.Content("~/content/images/next.png")">Next</button>
    <div class="upload-container"><a href="#" data-bind="click: uploadMusic">Upload your music</a></div>
</div>

<table id="songs-table">
    <thead>
        <tr>
            <th data-bind="visible: hasAnyRecentSongs">Recent</th>
            <th data-bind="visible: hasLikedAnySongs">My likes</th>
            <th>Now playing</th>
            <th data-bind="visible: trendingSongs().length > 0">Trending</th>            
            <th data-bind="visible: topSongs().length > 0">Top tunes</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td class="column" data-bind="template: { foreach: recentSongs, name: 'song-tile-template', afterAdd: fadeIn }, visible: hasAnyRecentSongs"></td>
            <td id="myLikedSongsColumn" class="column" data-bind="template: { foreach: myLikedSongs, name: 'song-tile-template', afterAdd: fadeIn }, visible: hasLikedAnySongs"></td>
            <td class="current-song-column">

                @*The big current song tile*@
                <div class="current-song" data-bind="with: currentSong">
                    <img class="album-art" data-bind="attr: { src: albumArtUri, title: artist + ' - ' + album + ' - ' + name }, click: playSongFromAlbum" />
                    <div class="info">
                        <div class="rating">
                            <img style="display: block; margin-left: 8px;" data-bind="attr: { src: thumbUpImage, title: likeHoverText }, click: like, touchstart: like" />
                            <span data-bind="text: communityRank, style: { color: chavah.converters.rankToColor($data.communityRank()) }"></span>
                            <img style="display: block; margin-left: 8px; margin-top: -7px;" data-bind="attr: { src: thumbDownImage, title: dislikeHoverText }, click: dislike, touchstart: dislike" />
                        </div>
                        <span class="name" data-bind="text: name, attr: { title: name }"></span>
                        <div class="artist">
                            <span>By</span>
                            <a class="artist" href="#" data-bind="text: artist, click: playSongFromArtist, attr: { title: artist + ' - click to play another song from this artist' }"></a>
                        </div>
                        <div class="artist">
                            <span class="artist">On</span>
                            <a class="album" href="#" data-bind="text: album, click: playSongFromAlbum, attr: { title: album + ' - click to play another song from this album' }"></a>
                        </div>
                    </div>
                </div>

            </td>
            <td class="column" data-bind="template: { foreach: trendingSongs, name: 'song-tile-template', afterAdd: fadeIn }, visible: trendingSongs().length > 0"></td>
            <td class="column" data-bind="template: { foreach: topSongs, name: 'song-tile-template', afterAdd: fadeIn }, visible: topSongs().length > 0"></td>
        </tr>
    </tbody>
</table>

<div class="grayed-out" style="display: none" data-bind="visible: songRequestVisible">
    <div class="song-request-dialog">
        <img class="song-control" data-bind="click: closeSongRequestWindow" style="position: absolute; right: -20px; top: -20px;" src="@Url.Content("~/content/images/Close.png")" />
        <h1 style="line-height: 22px;" class="title">Request a song</h1>
        <span style="font-family: 'Lucida Sans'; font-size: 13px; margin-left: 5px; ">Sweet on one of Chavah's tunes?</span>
        <br />
        <span style="font-family: 'Lucida Sans'; font-size: 13px; margin-left: 5px; ">Type the name below, Chavah will play it for all her listeners.</span>
        <input id="song-request-textbox" type="text" data-bind="value: songRequestText, valueUpdate: 'keyup'" />
        <div id="song-request-drop-down" data-bind="visible: songRequestMatches().length >= 0, foreach: songRequestMatches"> 
            <div class="song-request-match ellipsis-overflow" data-bind="click: $root.songRequestMatchClicked">
                <img data-bind="attr: { src: albumArtUri, title: album }" />
                <div style="vertical-align:middle; display:inline-block; height: 48px;">
                    <span data-bind="text: artist + ' - ' + name"></span>
                </div>
            </div>
        </div>
        <div id="request-current-song-button" data-bind="click: requestSelectedSong, visible: songRequestMatches().length == 0">
            <a href="#">Request this song</a>
        </div>
    </div>
</div>

<div id="player-container"></div>
<div id="player"></div>
<audio id="audioElement"></audio>

<script id="song-tile-template" type="text/html">
    <div class="song" data-bind="
            visible: hasSong, 
            event: { click: play, mouseenter: mouseEnter, mouseout: mouseLeave }, 
            fadeInOnSongChange: true,
            attr: { title: artist() + ' - ' + album() + ' - ' + name() + '\r\nCommunity rank: ' + ko.utils.unwrapObservable(communityRank()) }">
        <img data-bind="attr: { src: albumArtUri }" />
        <div class="info">
            <span data-bind="text: name"></span>
        </div>
    </div>
</script>

<script type="text/javascript">

    $(function () {

        // Set up Filepicker.io with our API key
        filepicker.setKey('ApVE_5eOHS-CEcBP-gCUCz');

        chavah.constants.contentDirectory = '@Url.Content("~/Content")';
        chavah.constants.scriptsDirectory = '@Url.Content("~/Scripts")';
        var userId = chavah.localstorage.getOrCreateUserId();
        var viewModel = new chavah.mainViewModel($(this));
        chavah.viewModel = viewModel;
        ko.applyBindings(viewModel);

        PubSub.subscribe("PlaySong", function (message, args) {
            if (viewModel.currentSong()) {
                viewModel.player.pause();
                viewModel.pushRecentSong(viewModel.currentSong());
            }

            $(".current-song").fadeOut(250, function () {
                viewModel.currentSong(args.song);
                $(".current-song").fadeIn(250);
            });
        });

        PubSub.subscribe("TogglePlayPause", function (message, args) {
            viewModel.player.playPause();
        });

        PubSub.subscribe("Pause", function (message, args) {
            if (viewModel.currentSong()) {
                viewModel.player.pause();
            }
        });

        chavah.dataServices.start();
        var songIdQuery = parseInt(location.search.replace("?song=", ''), 10);
        if (songIdQuery > 0) {
            PubSub.publish("PlaySongById", { songId: songIdQuery });
        }
        else {
            viewModel.nextSong();
        }
    });

</script>

<div id="example" class="k-content">
    <div id="forecast">
        <div id="tabstrip">
            <ul>
                <li class="k-state-active">
                    Library
                </li>
				
                <li>
                    Account Settings
                </li>
            </ul>
            <div>
                <div class="weather">
                            
                    <div id="example" class="k-content">
                        <div id="grid"></div>

                        <script>
                            $(document).ready(function () {
                                var crudServiceBaseUrl = "/Songs/",
                                    dataSource = new kendo.data.DataSource({
                                        transport: {
                                            read: {
                                                url: crudServiceBaseUrl + "GetSongs",
                                                dataType: "json"
                                            },

                                            parameterMap: function (options, operation) {
                                                if (operation !== "read" && options.models) {
                                                    return { models: kendo.stringify(options.models) };
                                                }
                                            }
                                        },
                                        batch: true,
                                        pageSize: 30

                                    });

                                $("#grid").kendoGrid({
                                    dataSource: dataSource,
                                    pageable: true,
                                    height: 350,
                                    sortable: true,
                                    selectable: true,


                                    columns: [
                                        { field: "Name", title: "Song" },
                                        { field: "Album", title: "Album" },
                                        { field: "Artist", title: "Artist" },
                                        { field: "Genre", title: "Genre" },
                                        { field: "Country", title: "Country" },

                                    ]

                                });
                            });
                        </script>
                    </div>
                </div>
					
            </div>
            <div>
                    
                Account Settings goes Here
            </div>
        </div>

        <style scoped>
            #forecast {
                width: 975px;
                height: 400px;
                margin: 30px auto;
                padding: 80px 15px 0 15px;
                background: url('../../content/web/tabstrip/forecast.png') transparent no-repeat 0 0;
            }

				
        </style>

        <script>
              $(document).ready(function () {
                  $("#tabstrip").kendoTabStrip({
                      animation: {
                          open: {
                              effects: "fadeIn"
                          }
                      }

                  });
              });
        </script>
    </div>
</div>

